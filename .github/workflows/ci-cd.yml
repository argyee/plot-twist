name: CI/CD Pipeline

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - 'LICENSE'
      - '.gitignore'
  pull_request:
    branches:
      - master

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests with coverage
        run: npm test -- --coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
        continue-on-error: true

      - name: Check bot starts without errors
        run: node --check src/bot.js

      - name: Send Discord notification (Test Success)
        if: success()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "‚úÖ Tests Passed"
          description: "All tests passed successfully on `${{ github.ref_name }}`"
          color: 0x00ff00
          username: GitHub Actions
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png

      - name: Send Discord notification (Test Failure)
        if: failure()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "‚ùå Tests Failed"
          description: "Tests failed on `${{ github.ref_name }}`\n[View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})"
          color: 0xff0000
          username: GitHub Actions
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Send Discord notification (Deploy Started)
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: "In Progress"
          title: "üöÄ Deployment Started"
          description: "Deploying to production server..."
          color: 0xffaa00
          username: GitHub Actions
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png

      - name: Tailscale
        uses: tailscale/github-action@v4
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/moviebot
            echo "üì• Pulling latest code..."
            git fetch origin master
            git reset --hard origin/master

            echo "üì¶ Installing dependencies..."
            npm ci

            echo "üîÑ Restarting bot with new structure..."
            pm2 delete moviebot 2>/dev/null || true
            pm2 start /opt/moviebot/src/bot.js --name moviebot
            pm2 save

            # Ensure PM2 starts on system reboot
            pm2 startup systemd -u $USER --hp $HOME
            pm2 save --force

            echo "‚úÖ Deployment complete!"
            pm2 list

      - name: Send Discord notification (Deploy Success)
        if: success()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "‚úÖ Deployment Successful"
          description: |
            Successfully deployed to production!

            **Commit:** `${{ github.event.head_commit.message }}`
            **Author:** ${{ github.event.head_commit.author.name }}
            **Branch:** `${{ github.ref_name }}`
          color: 0x00ff00
          username: GitHub Actions
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png

      - name: Send Discord notification (Deploy Failure)
        if: failure()
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          status: ${{ job.status }}
          title: "‚ùå Deployment Failed"
          description: |
            Deployment to production failed!

            **Commit:** `${{ github.event.head_commit.message }}`
            **Branch:** `${{ github.ref_name }}`
            [View Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
          color: 0xff0000
          username: GitHub Actions
          avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
